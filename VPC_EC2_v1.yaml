---
AWSTemplateFormatVersion: "2010-09-09"

Description: This template deploys VPC with a single Public subnet and creates a EC2 instance in Public subnet.

Parameters:
 
  MyVPC:
  	Description: Enter the name of the VPC.
    Type: String 
    
  MyVPCCIDR:
    ConstraintDescription: CIDR block parameter must be in the form between /16 to /28 CIDR values
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Default: 10.0.0.0/24
    Description: Enter the IP ranges with valid CIDR notation for the VPC.
    Type: String

  MyVPCTenancy:
    AllowedValues:
      - default
      - dedicated
    Default: default
    Description: Please enter the Tenancy for the VPC
    Type: String

  SubnetA:
    Description: Enter the name of the Subnet.
    Type: String 

  SubnetACIDR:
    Default: 10.0.0.0/24
    Description: Enter the IP ranges with valid CIDR notation for the public subnet.
    Type: String

  SubnetAAvailabilityZone:
    AllowedValues: 
      - ap-south-1a
      - ap-south-1b
    Default:  ap-south-1a
    Description:  Select the Availabilty zone for SubnetA
    Type: String

  EC2Instance:
    Description: Enter the name of EC2 instance
    Type: String
    
  InstanceAMIImage:
    Default: ami-0655793980c0bf43f
    Descciption: AMI image for the Windows EC2 instance
    Type: String

  EC2InstanceType:
    AllowedValues: 
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
    Default:  t2.micro
    Description: Select the EC2 instance type.
    Type: String

  LoginKeyPair:
    Default: WinKey
    Description: Select from the existing keys for the EC2 instance
    Type: AWS::EC2::KeyPair::KeyName

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/24
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      VpcId: !Ref MyVPC

  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref SubnetAAvailabilityZone
      CidrBlock: 10.0.0.0/28
      MapPublicIpOnLaunch: false
      VpcId: !Ref MyVPC

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
      - Key: Name
        Value: WindowsServer

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: WindowsServer

  InternetRoute:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref myRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref myInternetGateway
       RouteTableId: !Ref RouteTable

  SubnetRouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow HTTPS connections for EC2 windows server
        VpcId: !Ref MyVPC
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        GroupDescription: Allow RDP connection to EC2 windows server
        VpcId: !Ref myVPC
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: 0.0.0.0/0

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 30
            VolumeType: gp2
            DeleteOnTermination: false
      AvailabilityZone: !Ref SubnetAAvailabilityZone
      ImageId: !Ref ServerAMIImage
      InstanceInitiatedShutdownBehavior: Stop
      InstanceType: !Ref EC2Servertype
      KeyName: !Ref LoginKeyPair
      SecurityGroups: !Ref EC2SecurityGroup
      SubnetId: !Ref Subnet
      Tags:
      - Key: Name
        Value: WindowsServer 

  ElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref EC2Instance
      Tags:
        - Key: Name
          Value: WindowsServer 





     



